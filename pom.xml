<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.falcon</groupId>
	<artifactId>falcon-backup-restore</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<springfox-version>2.7.0</springfox-version>
		<version.swagger.codegen>2.2.1</version.swagger.codegen>
		<default.package>com.falcon.backup</default.package>
		<docker.image.prefix>falconuber</docker.image.prefix>
		<docker.image.name>falcon-backup-restore</docker.image.name>
		<build.number>SNAPSHOT</build.number>
	</properties>

	<dependencies>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
	</dependencies>
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<finalName>falcon-backup-restore</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<configuration>
						<showLogs>true</showLogs>
						<!-- 'combine.children="append"' allows us later in the submodules 
							to define new images and they will be added to this config (instead of merged) -->
						<images combine.children="append">
							<image>
								<alias>${docker.image.name}</alias>
								<name>${docker.image.prefix}/${docker.image.name}</name>
								<build>
									<assembly>
										<mode>dir</mode>
										<basedir>/</basedir>
										<descriptorRef>artifact</descriptorRef>
										<dockerFileDir>./</dockerFileDir>
										<inline>
											<dependencySets>
												<dependencySet>
													<includes>
														<include>org.jacoco:org.jacoco.agent</include>
													</includes>
													<outputDirectory>.</outputDirectory>
													<outputFileNameMapping>jacoco-agent.jar</outputFileNameMapping>
												</dependencySet>
												<dependencySet>
													<includes>
														<include>com.falcon:falcon-backup-restore</include>
													</includes>
													<outputDirectory>.</outputDirectory>
													<outputFileNameMapping>falcon-backup-restore.jar</outputFileNameMapping>
												</dependencySet>
											</dependencySets>
										</inline>
									</assembly>
									<tags>
										<tag>${build.number}</tag>
									</tags>
								</build>
							</image>
						</images>
					</configuration>
				</plugin>
				<!-- the following is only necessary if you are using eclipse and m2e 
					see also: https://blog.philipphauer.de/enriching-restful-services-swagger/ 
					and: http://www.eclipse.org/m2e/documentation/m2e-execution-not-covered.html -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>io.swagger</groupId>
										<artifactId>swagger-codegen-maven-plugin</artifactId>
										<versionRange>[${version.swagger.codegen},)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<!-- TODO: trace the error while eclipse throws a "missing swagger 
											input or config!" at me! In the meanwhile I just disable the execution within 
											eclipse <execute> <runOnIncremental>false</runOnIncremental> </execute> -->
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>${version.swagger.codegen}</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>src/main/resources/falcon-backup-restore.yml</inputSpec>
							<language>spring</language>
							<configOptions>
								<sourceFolder>src</sourceFolder>
								<interfaceOnly>true</interfaceOnly>
							</configOptions>
							<configHelp />
							<output>target/generated-sources</output>
							<apiPackage>${default.package}.handler</apiPackage>
							<modelPackage>${default.package}.model</modelPackage>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- the following is only necessary if you are using eclipse and m2e 
				see also: https://blog.philipphauer.de/enriching-restful-services-swagger/ -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<!-- taken out due to eclipse warning <version>1.9.1</version> -->
				<executions>
					<!-- TODO for eclipse/m2e users: install the m2e connector 'buildhelper' 
						by selecting 'Discover new m2e connectors' while hovering over the follwoing 
						execution tag -->
					<execution>
						<id>add-generated-source</id>
						<phase>initialize</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/src</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.5.201505241946</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>docker-image-build</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<configuration>
							<images>
								<image>
									<name>falconuber/falcon-backup-restore</name>
									<build>
										<assembly>
											<descriptorRef>project</descriptorRef>
											<dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
										</assembly>
									</build>
								</image>
							</images>

						</configuration>
						<executions>
							<execution>
								<id>build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker-image-push</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>push-image</id>
								<phase>package</phase>
								<goals>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
